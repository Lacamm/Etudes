[17:32] JULIEN ARSOUZE
    
package com.example.room20202021.BD;
import android.app.Application;
import android.os.AsyncTask;
import android.util.Log;
import androidx.lifecycle.LiveData;
import java.util.List;
public class WordRepository {​​​​​
    private WordDao wordDao;
    private LiveData<List<Word>> allWords;
    private LiveData<Integer> nbMots;
    
    WordRepository(Application application){​​​​​
        WordRoomDatabase db = WordRoomDatabase.getDatabase(application);
        wordDao = db.wordDao();
        allWords = wordDao.getAllWords();
        nbMots = wordDao.nbWordsLD();
    }​​​​​
    
    LiveData<List<Word>> getAllWords(){​​​​​ return allWords;}​​​​​
    
    LiveData<Integer> getNbMotsLD(){​​​​​ return nbMots;}​​​​​
    
    public void insert(Word word){​​​​​
        new insertAsyncTask(wordDao).execute(word);
    }​​​​​
    
    private static class insertAsyncTask extends AsyncTask<Word,Void,Void>{​​​​​
        private WordDao wordDao;
        
        insertAsyncTask(WordDao w){​​​​​ wordDao = w;}​​​​​
        
        @Override
protected Void doInBackground(final Word... params){​​​​​
           wordDao.insert(params[0]); 
           return null;
        }​​​​​
    }​​​​​
    public void deleteAll(){​​​​​
        new deleteAsyncTask(wordDao).execute();
    }​​​​​
    private static class deleteAsyncTask extends AsyncTask<Void,Void,Void>{​​​​​
        private WordDao wordDao;
        deleteAsyncTask(WordDao w){​​​​​ wordDao = w;}​​​​​
        @Override
protected Void doInBackground(final Void... params){​​​​​
            wordDao.deleteAll();
            return null;
        }​​​​​
    }​​​​​
    public Integer getNbMots (){​​​​​
        try {​​​​​
            return new getNbMotsAsyncTask(wordDao).execute().get();
        }​​​​​catch (Exception e){​​​​​
            Log.d("MesLogs","pb getNbMots");
        }​​​​​
        return null;
    }​​​​​
    private static class getNbMotsAsyncTask extends AsyncTask<Void,Void,Integer>{​​​​​
        private WordDao wordDao;
        getNbMotsAsyncTask(WordDao w){​​​​​ wordDao = w;}​​​​​
        @Override
protected Integer doInBackground(final Void... params){​​​​​
            return new Integer(wordDao.nbWords());
        }​​​​​
    }​​​​​
}​​​​​
